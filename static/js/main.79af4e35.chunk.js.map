{"version":3,"sources":["components/GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","state","this","props","goods","map","good","style","color","name","id","React","Component","API_URL","getAll","a","fetch","then","data","json","response","Error","get5First","filter","sort","firstGood","secondGood","localeCompare","getRedGoods","App","loadGoods","callback","setState","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"mRAMaA,EAAb,4MACEC,MAAQ,GADV,4CAGE,WACE,OACE,6BACGC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GAAI,OACxB,oBAAkBC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAA1C,SACGF,EAAKG,MADCH,EAAKI,aAPxB,GAA+BC,IAAMC,WCL/BC,EAAO,wEAEN,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,+EAEoBC,MAAMH,GAC1BI,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAHlB,cAEGC,EAFH,yBAKIA,GALJ,sCAOG,IAAIC,MAAJ,qCAPH,0D,sBAWA,IAAMC,EAAS,uCAAG,4BAAAP,EAAA,sEACJD,IADI,cACjBI,EADiB,yBAGhBA,EAAKK,QAAO,SAAAjB,GAAI,OAAIA,EAAKI,IAAM,KACnCc,MAAK,SAACC,EAAWC,GAAZ,OAA2BD,EAAUhB,KAAKkB,cAAcD,EAAWjB,UAJpD,2CAAH,qDAOTmB,EAAW,uCAAG,4BAAAb,EAAA,sEACND,IADM,cACnBI,EADmB,yBAGlBA,EAAKK,QAAO,SAAAjB,GAAI,MAAmB,QAAfA,EAAKE,UAHP,2CAAH,qDCXXqB,EAAb,4MACE5B,MAAQ,CACNG,MAAO,IAFX,EAKE0B,UALF,uCAKc,WAAOC,GAAP,eAAAhB,EAAA,sEACUgB,EADV,OACJ3B,EADI,OAGV,EAAK4B,SAAS,CAAE5B,UAHN,2CALd,kGAWE,WAAU,IAAD,OACP,OACE,qCACE,uDACA,wBACE6B,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUhB,MAFhC,sBAOA,wBACEmB,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUR,MAFhC,oBAOA,wBACEW,KAAK,SACLC,QAAS,kBAAM,EAAKJ,UAAUF,MAFhC,sBAMA,cAAC,EAAD,CACExB,MAAOF,KAAKD,MAAMG,eApC5B,GAAyBO,IAAMC,WCP/BuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.79af4e35.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport class GoodsList extends React.Component<Props> {\n  state = {};\n\n  render() {\n    return (\n      <ul>\n        {this.props.goods.map(good => (\n          <li key={good.id} style={{ color: `${good.color}` }}>\n            {good.name}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport async function getAll(): Promise<Good[]> {\n  try {\n    const response = await fetch(API_URL)\n      .then(data => data.json());\n\n    return response;\n  } catch (error) {\n    throw new Error(`There is a problem: ${error}`);\n  }\n}\n\nexport const get5First = async () => {\n  const data = await getAll();\n\n  return data.filter(good => good.id <= 5)\n    .sort((firstGood, secondGood) => firstGood.name.localeCompare(secondGood.name));\n};\n\nexport const getRedGoods = async () => {\n  const data = await getAll();\n\n  return data.filter(good => good.color === 'red');\n};\n","import React from 'react';\nimport './App.scss';\nimport { GoodsList } from './components/GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\ninterface State {\n  goods: Good[]\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: [],\n  };\n\n  loadGoods = async (callback: Promise<Good[]>) => {\n    const goods = await callback;\n\n    this.setState({ goods });\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        <button\n          type=\"button\"\n          onClick={() => this.loadGoods(getAll())}\n        >\n          Load All\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.loadGoods(get5First())}\n        >\n          Load 5\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => this.loadGoods(getRedGoods())}\n        >\n          Load red\n        </button>\n        <GoodsList\n          goods={this.state.goods}\n        />\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}